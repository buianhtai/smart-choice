plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.nab.shop.tiki'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
    springCloudVersion = "2020.0.0"
    resilience4jVersion = "1.3.1"
}

repositories {
    mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.security:spring-security-oauth2-resource-server')
    implementation('org.springframework.security:spring-security-oauth2-jose')

    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation ("org.springframework.boot:spring-boot-starter-webflux") {
        exclude module: "spring-boot-starter-tomcat"
    }

    implementation('io.springfox:springfox-boot-starter:3.0.0')

    implementation('org.springframework.cloud:spring-cloud-stream')
    implementation('org.springframework.cloud:spring-cloud-stream-binder-kafka')
    compile 'org.springframework.kafka:spring-kafka'
    compile "io.projectreactor.kafka:reactor-kafka"

    implementation('org.springframework.cloud:spring-cloud-starter-config')
    implementation('org.springframework.retry:spring-retry')
    implementation("io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}")
    implementation("io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}")

    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'io.r2dbc:r2dbc-postgresql'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'

}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


test {
	useJUnitPlatform()
}
