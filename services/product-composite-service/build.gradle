buildscript {
	ext {
		springBootVersion = '2.4.1'
        springCloudVersion = "2020.0.0"
        resilience4jVersion = "1.3.1"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ecom'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 11


repositories {
	mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
	implementation project(':common')
    implementation ("org.springframework.boot:spring-boot-starter-webflux") {
        exclude module: "spring-boot-starter-tomcat"
    }

    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.security:spring-security-oauth2-resource-server')
    implementation('org.springframework.security:spring-security-oauth2-jose')

    compile 'org.springframework.kafka:spring-kafka'
    compile "io.projectreactor.kafka:reactor-kafka"

	implementation('org.springframework.retry:spring-retry')
	implementation("io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}")
	implementation("io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}")


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile 'com.github.javafaker:javafaker:1.0.2'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

springBoot {
    buildInfo()
}

test {
    useJUnitPlatform()
}
